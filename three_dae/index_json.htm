<html>
<head>
    <title>My first three.js app</title>
    <style>
        body { margin: 0; }
        canvas { width: 100%; height: 100% }
    </style>
</head>
<body>
<script src="https://cdnjs.cloudflare.com/ajax/libs/three.js/100/three.min.js"></script>
<script>

    var raycaster = new THREE.Raycaster();
    var mouse = new THREE.Vector2();

    function onMouseMove( event ) {

        // calculate mouse position in normalized device coordinates
        // (-1 to +1) for both components
        console.log('move')
        mouse.x = ( event.clientX / window.innerWidth ) * 2 - 1;
        mouse.y = - ( event.clientY / window.innerHeight ) * 2 + 1;

    }

    var scene = new THREE.Scene();
    var camera = new THREE.PerspectiveCamera( 75, window.innerWidth/window.innerHeight, 0.1, 1000 );
    //
    camera.position.z = 6;
    camera.position.y = 0.5;
    camera.position.x = 0.5;
    var renderer = new THREE.WebGLRenderer();
    renderer.setSize( window.innerWidth, window.innerHeight );
    document.body.appendChild( renderer.domElement );

    renderer.setClearColor(0x00ffff, 1);
    renderer.gammaOutput = true;

    var material = new THREE.MeshLambertMaterial({ color: 0xF5F5F5 });
    var object = {};

    var loader = new THREE.BufferGeometryLoader();

    loader.load(
        'notifyme.json',
        function ( geometry ) {
            object = new THREE.Mesh( geometry, material );
            scene.add( object );
            // renderer.render( scene, camera );

        });

    var animate = function () {
        requestAnimationFrame( animate );

        // update the picking ray with the camera and mouse position

        object.rotation.x += 0.01;
        // object.rotation.y += 0.01;
        renderer.render( scene, camera );
    };
    animate();

    window.addEventListener( 'mousemove', onMouseMove, false );

</script>
</body>
</html>